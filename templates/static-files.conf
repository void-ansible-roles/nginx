server {
        listen 80;
        listen [::]:80;
        server_name {{ site_url }};

        {% if use_ssl %}
        return 301 https://{{ site_url }}$request_uri;
        {% else %}
        root {{ site_path }};

        include /etc/nginx/locations.d/{{ site_url }}/*.conf;
        {% endif %}
}

{% if use_ssl %}
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ site_url }};

        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
        ssl_certificate {{ ssl_certificate_path }};
        ssl_certificate_key {{ ssl_key_path }};
        ssl_session_timeout {{ ssl_session_timeout }};
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        ssl_dhparam {{ ssl_dhparam }};

        # modern configuration. tweak to your needs.
        ssl_protocols {{ ssl_protocols }};
        ssl_ciphers '{{ ssl_ciphers|join(':') }}';
        ssl_prefer_server_ciphers on;

{% if ssl_hsts_age is defined %}
        # HSTS (ngx_http_headers_module is required)
        add_header Strict-Transport-Security max-age={{ ssl_hsts_age }};
{% endif %}

        # OCSP Stapling ---
        # fetch OCSP records from URL in ssl_certificate and cache them
{% if ssl_stapling %}
        ssl_stapling on;
        ssl_stapling_verify on;
{% endif %}

        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/ssl/cert.pem;

        resolver {{ ssl_resolvers_v4|join(' ') }}{% if ssl_resolvers_v6%} [{{ ssl_resolvers_v6|join('] [') }}]{% endif %};

        root {{ site_path }};

        location / {
                index index.html;
        }

        include /etc/nginx/locations.d/{{ site_url }}/*.conf;
}
{% endif %}
